# Name shown in GitHub Actions UI
name: Manual Docker Build & Scan

# Trigger manually from GitHub UI
on:
  workflow_dispatch:

# ⛓️ Set minimum permissions (best practice)
permissions:
  contents: read       # Needed to clone repo
  packages: write      # Needed if you want to push to GitHub Packages (optional)
  security-events: write  # ✅ Required for uploading SARIF to GitHub

  # Avoid 'write-all' for security

jobs:
  docker-build-and-push:
    name: Build, Scan, and Push Docker Image
    runs-on: ubuntu-latest  # Use latest Ubuntu runner

    steps:
      # ✅ Step 1: Clone your repo into the runner
      - name: Checkout code
        uses: actions/checkout@v3

      # ✅ Step 2: Run Checkov to scan Dockerfile, workflows, IaC, etc.
      - name: Checkov Scan
        uses: bridgecrewio/checkov-action@v12.2545.0
        with:
          directory: .       # Scan whole repo
          quiet: true        # Reduce noise in logs
          output_format: sarif # Format for GitHub Code Scanning results

      # ✅ Step 3: Log in to Docker Hub using secrets
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # ✅ Step 4: Build Docker image and tag it
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/myapp:latest .

      # ✅ Step 5: Push image to Docker Hub
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/myapp:latest

      # ✅ Step 6 (Optional): Upload Checkov results to GitHub Security tab
      - name: Upload SARIF report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif

       # ✅ Step 6 (Optional): Upload artifact      
      - name: Upload SARIF as artifact
        uses: actions/upload-artifact@v4
        with:
          name: checkov-results
          path: results.sarif

      
